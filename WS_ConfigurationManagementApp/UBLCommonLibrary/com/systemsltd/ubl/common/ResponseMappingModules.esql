BROKER SCHEMA com.systemsltd.ubl.common

PATH com.systemsltd.common.logging, com.systemsltd.ubl.common.config, com.systemsltd.common;

DECLARE hostSystem, hostSystemResponseCodePath, hostSystemResponseDetailsPath, mappedResponseDescPath,
		mappedResponseCodePath EXTERNAL CHARACTER '';

CREATE FILTER MODULE MapResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL logInfoDecoratedMessage('Response received from ' || hostSystem || ' system', Root);
		DECLARE transactionRef REFERENCE TO Environment;
		DECLARE systemCode, mappedCode, mappedDesc CHARACTER '';
		DECLARE setSystemCode CHARACTER 'SET systemCode = ' || hostSystemResponseCodePath;
		EVAL(setSystemCode);

		IF NOT isEmptyString(systemCode) THEN
			CALL getResponseCodeMapping(hostSystem || '|' || getResponseCodeType() || '|' || systemCode, mappedCode, mappedDesc);
		END IF;

		--If errorCode not in DB
		IF isEmptyString(mappedCode) THEN
			SET mappedCode = '50';
			SET mappedDesc = 'Unknown Error';
		END IF;

		CALL logInfoMessage('Mapped error code ' || systemCode || ' to ' || mappedCode);
		
		DECLARE mappedCodeLen CHARACTER REPLICATE('0', LENGTH(mappedCode));
		DECLARE setResponseCode CHARACTER 'SET ' || mappedResponseCodePath || ' = CAST(' || mappedCode ||
																			  ' AS CHARACTER FORMAT ''' || mappedCodeLen || ''')';
		EVAL(setResponseCode);

		DECLARE setResponseDesc CHARACTER 'CREATE FIELD '|| mappedResponseDescPath || ' AS transactionRef VALUE (''' || mappedDesc || ''')';
		EVAL(setResponseDesc);

--		IF NOT isEmptyString(hostSystemResponseDetailsPath) THEN
			DECLARE systemError CHARACTER '';
			IF NOT isEmptyString(hostSystemResponseDetailsPath) THEN
				DECLARE setSystemError CHARACTER 'SET systemError = ' || hostSystemResponseDetailsPath;
				EVAL(setSystemError);
			ELSEIF NOT isEmptyString(mappedDesc) THEN
				SET systemError = mappedDesc;
				CALL logInfoMessage('systemError is: ' || systemError);
			END IF;
			
			DECLARE copySystemResponse CHARACTER 'CREATE NEXTSIBLING OF transactionRef
											NAME ('''|| FIELDNAME(transactionRef) || ''')
											VALUE (''' || systemCode || '|' || systemError || ''')';
											
			EVAL(copySystemResponse);

			SET Environment.Variables.Transaction.systemCode = systemCode;
			SET Environment.Variables.Transaction.systemError = systemError;
--		END IF;

		RETURN TRUE;
	END;
END MODULE;


CREATE FUNCTION getResponseCodeMapping(systemCode CHARACTER, OUT mappedCode CHARACTER, OUT mappedDesc CHARACTER)
BEGIN
	DECLARE value CHARACTER getCodeMappingValue(systemCode);
	SET mappedCode = SUBSTRING(value BEFORE '|');
	SET mappedDesc = SUBSTRING(value AFTER '|');
END;


CREATE COMPUTE MODULE ExceptionResponseModule 
	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		DECLARE codeRef, descRef REFERENCE TO InputRoot;
		DECLARE exceptionRef REFERENCE TO InputExceptionList;

		IF(NOT isEmptyString(mappedResponseCodePath) AND NOT isEmptyString(mappedResponseDescPath)) THEN
			DECLARE evalString CHARACTER 'CREATE FIELD ';
			EVAL(evalString || mappedResponseCodePath);
			EVAL(evalString || mappedResponseDescPath);

			SET evalString = 'MOVE codeRef TO ' || mappedResponseCodePath;
			EVAL(evalString);
			SET evalString = 'MOVE descRef TO ' || mappedResponseDescPath;
			EVAL(evalString);

			CALL getExceptionResponseMapping(exceptionRef, codeRef, descRef);
			CREATE NEXTSIBLING OF descRef NAME ('Item') VALUE '|';
		END IF;
		RETURN TRUE;
	END;
END MODULE;