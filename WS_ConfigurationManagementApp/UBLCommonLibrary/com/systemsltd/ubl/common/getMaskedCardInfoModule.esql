BROKER SCHEMA com.systemsltd.ubl.common
PATH com.systemsltd.common,com.systemsltd.common.logging;

--DECLARE UnMaskedRequired EXTERNAL BOOLEAN TRUE;
DECLARE CardFlag,CardNoPath,CnicPath,maskRequiredPath EXTERNAL CHARACTER '';

CREATE FILTER MODULE validateGetMaskedCardInformationRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE attrListRef REFERENCE TO Root.JSON.Data.transactionInfo.attributeList;
		DECLARE attrItemRef REFERENCE TO attrListRef.Item;
		DECLARE transactionRef REFERENCE TO Environment.Variables.Transaction;				
					
		DECLARE panNumber CHARACTER CASE WHEN isEmptyString(CardNoPath) 
			THEN findItemValueInList(attrItemRef, 'attributeKey', 'customerId')
				ELSE EVAL(CardNoPath) END; 
		call logInfoMessage('CardNoPath to be comment:' || CardNoPath);		
		DECLARE cnicNo CHARACTER CASE WHEN isEmptyString(CnicPath) THEN '' ELSE EVAL(CnicPath) END;
		call logInfoMessage('cnicNo to be comment:' || cnicNo);
 		DECLARE isMaskRequired CHARACTER CASE WHEN isEmptyString(maskRequiredPath) THEN 'N' ELSE EVAL(maskRequiredPath) END;
			call logInfoMessage('isMaskRequired to be comment:' || isMaskRequired);		 				
			IF NOT isEmptyString(isMaskRequired) AND UPPER(isMaskRequired) = 'Y' THEN
				SET isMaskRequired = TRUE;
				
				IF isEmptyString(cnicNo) THEN
					CREATE LASTCHILD OF transactionRef.Error TYPE NameValue NAME 'Item' VALUE getValidationErrorMsg('cnic');																						
				
				ELSEIF isEmptyString(panNumber) THEN
					CREATE LASTCHILD OF transactionRef.Error TYPE NameValue NAME 'Item' VALUE getValidationErrorMsg('panNumber/CardNumber');
				ELSE					
					
					IF 	   (CardFlag = 'DC') THEN
						SET transactionRef.getMaskedCardInfoRequest.cardFlag     = CardFlag;			
						SET transactionRef.getMaskedCardInfoRequest.cnic         = cnicNo;
						SET transactionRef.getMaskedCardInfoRequest.panNumber    = panNumber;
						SET transactionRef.getMaskedCardInfoRequest.UnMaskedFlag = isMaskRequired; 		
					
					ELSEIF (CardFlag = 'CC') THEN
						SET transactionRef.getMaskedCardInfoRequest.cardFlag     = CardFlag;
						SET transactionRef.getMaskedCardInfoRequest.cnic         = cnicNo;			
						SET transactionRef.getMaskedCardInfoRequest.panNumber    = panNumber;
						SET transactionRef.getMaskedCardInfoRequest.UnMaskedFlag = isMaskRequired; 
			  	 	END IF;	
				END IF;
					
			ELSE 
				SET transactionRef.getMaskedCardInfoRequest.UnMaskedFlag = FALSE; 			
				RETURN FALSE; 					
			END IF;
		
 
		RETURN TRUE;	
	END;
END MODULE;


CREATE COMPUTE MODULE PrepareGetMaskedDebitCardInformationRequestModule
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--declare variables
		SET OutputRoot.Properties = InputProperties; 

		DECLARE envRef REFERENCE TO Environment.Variables.Transaction;
		DECLARE getMaskedCardInfoRequest REFERENCE TO envRef.getMaskedCardInfoRequest;					
		DECLARE queryString,cnic,queryValue1,panNumber,queryValue2 CHARACTER;				
	   	 
	   	--checking for input fields  
	   		SET cnic = 'CNIC';
			SET queryValue1 = getMaskedCardInfoRequest.cnic;
	   		SET panNumber = 'PAN Number';
	   		SET queryValue2 = SUBSTRING(getMaskedCardInfoRequest.panNumber FROM 0 FOR 7) ||'%'|| SUBSTRING(getMaskedCardInfoRequest.panNumber FROM 13 FOR 4);
			call logInfoMessage('queryValue to be comment :' || queryValue2 );				    		 
	--   	END IF;
	   	 
		--calling db link 
	   	DECLARE irisCardInfoDBLink ROW;	 	   		
	   		SET queryString = 'SELECT * FROM iris.card_information ir WHERE CNIC = '''||COALESCE(queryValue1,' ')||''' AND  "'|| panNumber ||'" LIKE '''||queryValue2||''' ';
--	   		SET queryString = 'SELECT * FROM iris.card_information WHERE "'|| panNumber ||'" LIKE '''||queryValue2||''' ';
	   		
	   		SET irisCardInfoDBLink.data[] = PASSTHRU(queryString);
	   --	END IF;   	 	   	   
	    
	   	IF EXISTS(irisCardInfoDBLink.data[]) AND isEmptyString(irisCardInfoDBLink.data[2]) THEN	   			   	 
			DECLARE irisCardInfoDBLinkData REFERENCE TO irisCardInfoDBLink.data; 	   		

	   		SET envRef.getMaskedCardInfoResponse.panNumber = TRIM(irisCardInfoDBLinkData."PAN Number");
	   		SET envRef.getMaskedCardInfoResponse.expiryDate = irisCardInfoDBLinkData."Expiry Date";
	   		
	   		IF(irisCardInfoDBLinkData."Card Status" = '00')THEN
	   				SET envRef.getMaskedCardInfoResponse.cardStatus = 'Active';
	   	    ELSEIF (irisCardInfoDBLinkData."Card Status" = '01')THEN
	   		    	SET envRef.getMaskedCardInfoResponse.cardStatus = 'Warm';
	   		ELSEIF (irisCardInfoDBLinkData."Card Status" = '02')THEN
	   		    	SET envRef.getMaskedCardInfoResponse.cardStatus = 'Hot';
	   		ELSEIF (irisCardInfoDBLinkData."Card Status" = '03')THEN
	   		    	SET envRef.getMaskedCardInfoResponse.cardStatus = 'Fresh';
	   		ELSEIF (irisCardInfoDBLinkData."Card Status" = '05')THEN
	   		    	SET envRef.getMaskedCardInfoResponse.cardStatus = 'Produced';
	   		ELSEIF (irisCardInfoDBLinkData."Card Status" = '11')THEN
	   		    	SET envRef.getMaskedCardInfoResponse.cardStatus = 'Not produced'; 	
	   		END IF;	   			

	   		SET envRef.getMaskedCardInfoResponse.IMD = irisCardInfoDBLinkData.IMD;
	   		SET envRef.getMaskedCardInfoResponse.responseCode = '00';
	   		SET envRef.getMaskedCardInfoResponse.responseDetail = 'SUCCESS';	   	
	   		
	 	ELSE
		
			SET envRef.getMaskedCardInfoResponse.responseCode = '01';
	   	    SET envRef.getMaskedCardInfoResponse.responseDetail = 'NO DATA FOUND OR NO UNIQUE DATA';
	   		
	   	END IF;
		
		RETURN TRUE;
	END;
END MODULE;	

CREATE COMPUTE MODULE PrepareGetMaskedCreditCardInformationRequestModule
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--declare variables
		SET OutputRoot.Properties = InputProperties; 

		DECLARE envRef REFERENCE TO Environment.Variables.Transaction;
		DECLARE getMaskedCardInfoRequest REFERENCE TO envRef.getMaskedCardInfoRequest;					
		DECLARE queryString,cnic,queryValue1,panNumber,queryValue2,maskedPanNumber CHARACTER;				
	   	  
	   	--checking for input fields   
	   		SET cnic = 'NICNEW';
			SET queryValue1 = getMaskedCardInfoRequest.cnic;
	   		SET panNumber = 'CARDNUMBER';
	   		SET queryValue2 = SUBSTRING(getMaskedCardInfoRequest.panNumber FROM 0 FOR 7) ||'%'|| SUBSTRING(getMaskedCardInfoRequest.panNumber FROM 13 FOR 4) ||'%';
	   		
		--calling db link 
	   	DECLARE tctdbsCardInfoDBLink ROW;	 	   		
	   		SET queryString = 'SELECT * FROM TCTDBS.card_information WHERE NICNEW = '''||COALESCE(queryValue1,' ')||''' AND  "'|| panNumber ||'" LIKE '''||queryValue2||''' ';
--	   		SET queryString = 'SELECT * FROM TCTDBS.card_information WHERE "'|| panNumber ||'" LIKE '''||queryValue2||''' ';
	   		
	   		SET tctdbsCardInfoDBLink.data[] = PASSTHRU(queryString); 	   
	    	
	    	
	   	IF EXISTS(tctdbsCardInfoDBLink.data[]) AND isEmptyString(tctdbsCardInfoDBLink.data[2]) THEN	   			   	 
			DECLARE tctdbsCardInfoDBLinkData REFERENCE TO tctdbsCardInfoDBLink.data; 	   		
							
	   		SET envRef.getMaskedCardInfoResponse.expiryDate = tctdbsCardInfoDBLinkData.EXPIRYDATE;
	   		SET envRef.getMaskedCardInfoResponse.expiryDateStatus = tctdbsCardInfoDBLinkData.EXPIRYDATESTATUS;	   		
	   		--CALL com.systemsltd.common.logging.logInfoMessage(envRef.getMaskedCardInfoResponse.expiryDateStatus);
	   		SET envRef.getMaskedCardInfoResponse.nicNew = tctdbsCardInfoDBLinkData.NICNEW;	   		
	   		SET envRef.getMaskedCardInfoResponse.panNumber = TRIM(tctdbsCardInfoDBLinkData.CARDNUMBER); -- COALESCE(envRef.Request.[<].cardNumber,maskedPanNumber);
	   		SET envRef.getMaskedCardInfoResponse.cnic = tctdbsCardInfoDBLinkData.NICNEW;

	   		SET envRef.getMaskedCardInfoResponse.responseCode = '00';
	   		SET envRef.getMaskedCardInfoResponse.responseDetail = 'SUCCESS';	   	
	 	ELSE
		
			SET envRef.getMaskedCardInfoResponse.responseCode = '01';
	   	    SET envRef.getMaskedCardInfoResponse.responseDetail = 'NO DATA FOUND OR NO UNIQUE DATA';
	   		
	   	END IF;
		
		RETURN TRUE;
	END;
END MODULE;		

CREATE FILTER MODULE unMaskedRequiredFilter 
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN 
--		DECLARE envRef REFERENCE TO Environment.Variables.Transaction.Request.[<];
--				
--		IF (UnMaskedRequired)THEN 			
--			IF fieldAndValueExists(envRef.panNumber,'panNumber')THEN
--				SET envRef.getMaskedCardInfoRequest.cardFlag = CardFlag;			
--				SET envRef.getMaskedCardInfoRequest.panNumber = envRef.panNumber;				
--				RETURN TRUE;
--			ELSEIF fieldAndValueExists(envRef.cardNumber,'cardNumber')THEN
--				SET envRef.getMaskedCardInfoRequest.cardFlag = CardFlag;			
--				SET envRef.getMaskedCardInfoRequest.panNumber = envRef.cardNumber;	
--				RETURN TRUE; 
--		    END IF;			
--		ELSE	
--			RETURN FALSE; 					
--		END IF;
	END;
END MODULE;